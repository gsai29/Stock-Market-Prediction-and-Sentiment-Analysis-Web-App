{"ast":null,"code":"// import React, { useState } from 'react';\n// import './App.css';\n// function App() {\n//   const [email, setEmail] = useState('');\n//   const [userData, setUserData] = useState(null);\n//   const [error, setError] = useState('');\n//   const [isNewUser, setIsNewUser] = useState(false);\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     setError('');\n//     try {\n//       const response = await fetch('/mongodbsearch', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email: email }),\n//       });\n//       const data = await response.json();\n//       if (response.ok) {\n//         setUserData(data.data);\n//         setIsNewUser(data.status === 'not_found');\n//         console.log(data); // For debugging\n//       } else {\n//         throw new Error(data.error || 'Something went wrong');\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//       console.error('Error:', err);\n//     }\n//   };\n//   return (\n//     <div className=\"App\">\n//       <div className=\"App-header\">\n//         <form onSubmit={handleSubmit}>\n//           <label htmlFor=\"email\">Enter your Email Address:</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//         {isNewUser && <div>Hey, you are new here!</div>}\n//         {!isNewUser && userData && <div>Welcome back, {userData.name}!</div>}\n//         {error && <div>Error: {error}</div>}\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\nimport React,{useState}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[email,setEmail]=useState('');const[name,setName]=useState('');const[userStatus,setUserStatus]=useState('');const[error,setError]=useState('');const handleEmailSubmit=async event=>{event.preventDefault();setError('');try{const response=await fetch('/mongodbsearch',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email})});const data=await response.json();if(response.ok){setUserStatus(data.status);if(data.status==='found'){alert('Welcome back, '+data.data.name);// Optionally redirect or update UI\n}}else{throw new Error(data.error||'Something went wrong');}}catch(err){setError(err.message);console.error('Error:',err);}};const handleNameSubmit=async event=>{event.preventDefault();setError('');try{// Example: Post name to the server\nconst response=await fetch('/submit-name',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,name:name})});const result=await response.json();if(response.ok){alert('Name saved successfully!');// Optionally redirect or update UI\n}else{throw new Error(result.error||'Failed to save name');}}catch(err){setError(err.message);console.error('Error:',err);}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"App-header\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleEmailSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Enter your Email Address:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]}),userStatus==='not_found'&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleNameSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Enter your Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",value:name,onChange:e=>setName(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]})]})});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","email","setEmail","name","setName","userStatus","setUserStatus","error","setError","handleEmailSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","status","alert","Error","err","message","console","handleNameSubmit","result","className","children","onSubmit","htmlFor","type","id","value","onChange","e","target","required"],"sources":["C:/Users/gsaiu/Downloads/DS-Projects/Stock-Market-Prediction-Sentiment-Analysis/my-react-app/src/App.js"],"sourcesContent":["\n// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [email, setEmail] = useState('');\n//   const [userData, setUserData] = useState(null);\n//   const [error, setError] = useState('');\n//   const [isNewUser, setIsNewUser] = useState(false);\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     setError('');\n//     try {\n//       const response = await fetch('/mongodbsearch', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email: email }),\n//       });\n//       const data = await response.json();\n//       if (response.ok) {\n//         setUserData(data.data);\n//         setIsNewUser(data.status === 'not_found');\n//         console.log(data); // For debugging\n//       } else {\n//         throw new Error(data.error || 'Something went wrong');\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//       console.error('Error:', err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"App-header\">\n//         <form onSubmit={handleSubmit}>\n//           <label htmlFor=\"email\">Enter your Email Address:</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//         {isNewUser && <div>Hey, you are new here!</div>}\n//         {!isNewUser && userData && <div>Welcome back, {userData.name}!</div>}\n//         {error && <div>Error: {error}</div>}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [userStatus, setUserStatus] = useState('');\n  const [error, setError] = useState('');\n\n  const handleEmailSubmit = async (event) => {\n    event.preventDefault();\n    setError('');\n    try {\n      const response = await fetch('/mongodbsearch', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email: email }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUserStatus(data.status);\n        if (data.status === 'found') {\n          alert('Welcome back, ' + data.data.name);  // Optionally redirect or update UI\n        }\n      } else {\n        throw new Error(data.error || 'Something went wrong');\n      }\n    } catch (err) {\n      setError(err.message);\n      console.error('Error:', err);\n    }\n  };\n\n  const handleNameSubmit = async (event) => {\n    event.preventDefault();\n    setError('');\n    try {\n      // Example: Post name to the server\n      const response = await fetch('/submit-name', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email: email, name: name }),\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert('Name saved successfully!');  // Optionally redirect or update UI\n      } else {\n        throw new Error(result.error || 'Failed to save name');\n      }\n    } catch (err) {\n      setError(err.message);\n      console.error('Error:', err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <form onSubmit={handleEmailSubmit}>\n          <label htmlFor=\"email\">Enter your Email Address:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n\n        {userStatus === 'not_found' && (\n          <form onSubmit={handleNameSubmit}>\n            <label htmlFor=\"name\">Enter your Name:</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n        )}\n\n        {error && <div>Error: {error}</div>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}