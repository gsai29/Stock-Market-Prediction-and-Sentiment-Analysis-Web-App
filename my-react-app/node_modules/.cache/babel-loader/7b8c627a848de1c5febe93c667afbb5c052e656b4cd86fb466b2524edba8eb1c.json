{"ast":null,"code":"// import React, { useState } from 'react';\n// import './App.css';\n// function App() {\n//   const [email, setEmail] = useState('');\n//   const [name, setName] = useState('');\n//   const [userStatus, setUserStatus] = useState('');\n//   const [error, setError] = useState('');\n//   const handleEmailSubmit = async (event) => {\n//     event.preventDefault();\n//     setError('');\n//     try {\n//       const response = await fetch('/mongodbsearch', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email: email }),\n//       });\n//       const data = await response.json();\n//       if (response.ok) {\n//         setUserStatus(data.status);\n//         if (data.status === 'found') {\n//           alert('Welcome back, ' + data.data.name);  // Optionally redirect or update UI\n//         }\n//       } else {\n//         throw new Error(data.error || 'Something went wrong');\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//       console.error('Error:', err);\n//     }\n//   };\n//   const handleNameSubmit = async (event) => {\n//     event.preventDefault();\n//     setError('');\n//     try {\n//       // Example: Post name to the server\n//       const response = await fetch('/submit-name', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email: email, name: name }),\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         alert('Name saved successfully!');  // Optionally redirect or update UI\n//       } else {\n//         throw new Error(result.error || 'Failed to save name');\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//       console.error('Error:', err);\n//     }\n//   };\n//   return (\n//     <div className=\"App\">\n//       <div className=\"App-header\">\n//         <form onSubmit={handleEmailSubmit}>\n//           <label htmlFor=\"email\">Enter your Email Address:</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//         {userStatus === 'not_found' && (\n//           <form onSubmit={handleNameSubmit}>\n//             <label htmlFor=\"name\">Enter your Name:</label>\n//             <input\n//               type=\"text\"\n//               id=\"name\"\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               required\n//             />\n//             <button type=\"submit\">Submit</button>\n//           </form>\n//         )}\n//         {error && <div>Error: {error}</div>}\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\nimport React,{useState}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[email,setEmail]=useState('');const[name,setName]=useState('');const[stock,setStock]=useState('');const[company,setCompany]=useState('');const[userStatus,setUserStatus]=useState('');const[searchHistory,setSearchHistory]=useState([]);const[error,setError]=useState('');const handleEmailSubmit=async event=>{event.preventDefault();setError('');try{const response=await fetch('/mongodbsearch',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email})});const data=await response.json();if(response.ok){setUserStatus(data.status);setName(data.data.name);// Assuming name is in the data object\nsetSearchHistory(data.data.history||[]);// Assuming history is in the data object\n}else{throw new Error(data.error||'Something went wrong');}}catch(err){setError(err.message);}};const handleNameSubmit=async event=>{event.preventDefault();if(name.trim()){// Ensure name is not just whitespace\nsetUserStatus('name_submitted');}};const handleStockSubmit=async event=>{event.preventDefault();// Here you would handle the submission of the stock and company names\nconsole.log('Stock:',stock,'Company:',company);// Assuming you might want to send this data to the server or handle it somehow\n};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"App-header\",children:[userStatus===''&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleEmailSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Enter your Email Address:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]}),userStatus==='not_found'&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleNameSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Enter your Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",value:name,onChange:e=>setName(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]}),userStatus==='found'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Welcome Back, \",name,\"!\"]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleStockSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"stock\",children:\"Enter Stock Symbol:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"stock\",value:stock,onChange:e=>setStock(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"company\",children:\"Enter Company Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"company\",value:company,onChange:e=>setCompany(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"search-history\",children:searchHistory.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Quick History\"}),searchHistory.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[item.date,\" - \",item.company]},index))]})})]}),userStatus==='name_submitted'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Welcome, \",name,\"!\"]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleStockSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"stock\",children:\"Enter Stock Symbol:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"stock\",value:stock,onChange:e=>setStock(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"company\",children:\"Enter Company Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"company\",value:company,onChange:e=>setCompany(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]})]}),error&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]})]})});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","email","setEmail","name","setName","stock","setStock","company","setCompany","userStatus","setUserStatus","searchHistory","setSearchHistory","error","setError","handleEmailSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","status","history","Error","err","message","handleNameSubmit","trim","handleStockSubmit","console","log","className","children","onSubmit","htmlFor","type","id","value","onChange","e","target","required","length","map","item","index","date"],"sources":["C:/Users/gsaiu/Downloads/DS-Projects/Stock-Market-Prediction-Sentiment-Analysis/my-react-app/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [email, setEmail] = useState('');\n//   const [name, setName] = useState('');\n//   const [userStatus, setUserStatus] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleEmailSubmit = async (event) => {\n//     event.preventDefault();\n//     setError('');\n//     try {\n//       const response = await fetch('/mongodbsearch', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email: email }),\n//       });\n//       const data = await response.json();\n//       if (response.ok) {\n//         setUserStatus(data.status);\n//         if (data.status === 'found') {\n//           alert('Welcome back, ' + data.data.name);  // Optionally redirect or update UI\n//         }\n//       } else {\n//         throw new Error(data.error || 'Something went wrong');\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//       console.error('Error:', err);\n//     }\n//   };\n\n//   const handleNameSubmit = async (event) => {\n//     event.preventDefault();\n//     setError('');\n//     try {\n//       // Example: Post name to the server\n//       const response = await fetch('/submit-name', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email: email, name: name }),\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         alert('Name saved successfully!');  // Optionally redirect or update UI\n//       } else {\n//         throw new Error(result.error || 'Failed to save name');\n//       }\n//     } catch (err) {\n//       setError(err.message);\n//       console.error('Error:', err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"App-header\">\n//         <form onSubmit={handleEmailSubmit}>\n//           <label htmlFor=\"email\">Enter your Email Address:</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n\n//         {userStatus === 'not_found' && (\n//           <form onSubmit={handleNameSubmit}>\n//             <label htmlFor=\"name\">Enter your Name:</label>\n//             <input\n//               type=\"text\"\n//               id=\"name\"\n//               value={name}\n//               onChange={(e) => setName(e.target.value)}\n//               required\n//             />\n//             <button type=\"submit\">Submit</button>\n//           </form>\n//         )}\n\n//         {error && <div>Error: {error}</div>}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [stock, setStock] = useState('');\n  const [company, setCompany] = useState('');\n  const [userStatus, setUserStatus] = useState('');\n  const [searchHistory, setSearchHistory] = useState([]);\n  const [error, setError] = useState('');\n\n  const handleEmailSubmit = async (event) => {\n    event.preventDefault();\n    setError('');\n    try {\n      const response = await fetch('/mongodbsearch', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ email: email }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUserStatus(data.status);\n        setName(data.data.name);  // Assuming name is in the data object\n        setSearchHistory(data.data.history || []);  // Assuming history is in the data object\n      } else {\n        throw new Error(data.error || 'Something went wrong');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleNameSubmit = async (event) => {\n    event.preventDefault();\n    if (name.trim()) { // Ensure name is not just whitespace\n      setUserStatus('name_submitted');\n    }\n  };\n\n  const handleStockSubmit = async (event) => {\n    event.preventDefault();\n    // Here you would handle the submission of the stock and company names\n    console.log('Stock:', stock, 'Company:', company);\n    // Assuming you might want to send this data to the server or handle it somehow\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        {userStatus === '' && (\n          <form onSubmit={handleEmailSubmit}>\n            <label htmlFor=\"email\">Enter your Email Address:</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n        )}\n\n        {userStatus === 'not_found' && (\n          <form onSubmit={handleNameSubmit}>\n            <label htmlFor=\"name\">Enter your Name:</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n        )}\n\n        {userStatus === 'found' && (\n          <>\n            <h2>Welcome Back, {name}!</h2>\n            <form onSubmit={handleStockSubmit}>\n              <label htmlFor=\"stock\">Enter Stock Symbol:</label>\n              <input\n                type=\"text\"\n                id=\"stock\"\n                value={stock}\n                onChange={(e) => setStock(e.target.value)}\n                required\n              />\n              <label htmlFor=\"company\">Enter Company Name:</label>\n              <input\n                type=\"text\"\n                id=\"company\"\n                value={company}\n                onChange={(e) => setCompany(e.target.value)}\n                required\n              />\n              <button type=\"submit\">Submit</button>\n            </form>\n            <div className=\"search-history\">\n              {searchHistory.length > 0 && (\n                <>\n                  <h3>Quick History</h3>\n                  {searchHistory.map((item, index) => (\n                    <div key={index}>{item.date} - {item.company}</div>\n                  ))}\n                </>\n              )}\n            </div>\n          </>\n        )}\n\n        {userStatus === 'name_submitted' && (\n          <>\n            <h2>Welcome, {name}!</h2>\n            <form onSubmit={handleStockSubmit}>\n              <label htmlFor=\"stock\">Enter Stock Symbol:</label>\n              <input\n                type=\"text\"\n                id=\"stock\"\n                value={stock}\n                onChange={(e) => setStock(e.target.value)}\n                required\n              />\n              <label htmlFor=\"company\">Enter Company Name:</label>\n              <input\n                type=\"text\"\n                id=\"company\"\n                value={company}\n                onChange={(e) => setCompany(e.target.value)}\n                required\n              />\n              <button type=\"submit\">Submit</button>\n            </form>\n          </>\n        )}\n\n        {error && <div>Error: {error}</div>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}