{"ast":null,"code":"// // export default App;\n// import React, { useState } from 'react';\n// import './App.css';\n// function App() {\n//   const [email, setEmail] = useState('');\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     // Backend API call integration goes here\n//     console.log(email);\n//     // Navigate or perform other actions as needed\n//   };\n//   return (\n//     <div className=\"App\">\n//       <div className=\"App-header\">\n//         <form onSubmit={handleSubmit}>\n//           <label htmlFor=\"email\">Enter your Email Address:</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\nimport React,{useState}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[email,setEmail]=useState('');const[userData,setUserData]=useState(null);const[error,setError]=useState('');const[isNewUser,setIsNewUser]=useState(false);const handleSubmit=async event=>{event.preventDefault();setError('');try{const response=await fetch('/mongodbsearch',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email})});const data=await response.json();if(response.ok){setUserData(data.data);setIsNewUser(data.status==='not_found');console.log(data);// For debugging\n}else{throw new Error(data.error||'Something went wrong');}}catch(err){setError(err.message);console.error('Error:',err);}};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"App-header\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Enter your Email Address:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]}),isNewUser&&/*#__PURE__*/_jsx(\"div\",{children:\"Hey, you are new here!\"}),!isNewUser&&userData&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Welcome back, \",userData.name,\"!\"]}),error&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]})]})});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","email","setEmail","userData","setUserData","error","setError","isNewUser","setIsNewUser","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","status","console","log","Error","err","message","className","children","onSubmit","htmlFor","type","id","value","onChange","e","target","required","name"],"sources":["C:/Users/gsaiu/Downloads/DS-Projects/Stock-Market-Prediction-Sentiment-Analysis/my-react-app/src/App.js"],"sourcesContent":["\n// // export default App;\n// import React, { useState } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [email, setEmail] = useState('');\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     // Backend API call integration goes here\n//     console.log(email);\n//     // Navigate or perform other actions as needed\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"App-header\">\n//         <form onSubmit={handleSubmit}>\n//           <label htmlFor=\"email\">Enter your Email Address:</label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [email, setEmail] = useState('');\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState('');\n  const [isNewUser, setIsNewUser] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError('');\n    try {\n      const response = await fetch('/mongodbsearch', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email: email }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUserData(data.data);\n        setIsNewUser(data.status === 'not_found');\n        console.log(data); // For debugging\n      } else {\n        throw new Error(data.error || 'Something went wrong');\n      }\n    } catch (err) {\n      setError(err.message);\n      console.error('Error:', err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"email\">Enter your Email Address:</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        {isNewUser && <div>Hey, you are new here!</div>}\n        {!isNewUser && userData && <div>Welcome back, {userData.name}!</div>}\n        {error && <div>Error: {error}</div>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}